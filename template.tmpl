<!DOCTYPE html>
<html>
<head>

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css">
    <style>
        a{
            display: inline-block;
            color: #2196f3;
        }
        a:hover{
            color: #3f51b5;
            text-decoration: none;
        }
        i.material-icons{ vertical-align: middle }
    </style>
</head>
<body>

    <div class="container">

        <h1>Repository List</h1>

        <ul class="list-group">
            <% for (var i=0, len=data.length; i<len; i++){ %>                
                <li class="list-group-item">
                    <h3><%= data[i].name %></h3>
                    <p><%= data[i].description %></p>
                    <a href="<%= data[i].link %>">
                        <%= data[i].link %>
                    </a>
                    <a  title="copy" 
                        href="javascript:(function(){ return false; })();" 
                        onclick="copyToClipboard(this.previousElementSibling || this.previousSibling)">
                            <i class="material-icons">content_copy</i>
                    </a>
                    <br><br>
                </li>
            <% } %>
        </ul>

    </div>


    <script>

        function copyToClipboard(elem) {

            // create hidden text element, if it doesn't already exist
            var targetId = "_hiddenCopyText_";
            var isInput = elem.tagName === "INPUT" || elem.tagName === "TEXTAREA";
            var origSelectionStart, origSelectionEnd;
            if (isInput) {
                // can just use the original source element for the selection and copy
                target = elem;
                origSelectionStart = elem.selectionStart;
                origSelectionEnd = elem.selectionEnd;
            } else {
                // must use a temporary form element for the selection and copy
                target = document.getElementById(targetId);
                if (!target) {
                    var target = document.createElement("textarea");
                    target.style.position = "absolute";
                    target.style.left = "-9999px";
                    target.style.top = "0";
                    target.id = targetId;
                    document.body.appendChild(target);
                }
                target.textContent = elem.textContent.trim();
            }
            // select the content
            var currentFocus = document.activeElement;
            target.focus();
            target.setSelectionRange(0, target.value.length);

            // copy the selection
            var succeed;
            try {
                succeed = document.execCommand("copy");
            } catch (e) {
                succeed = false;
            }
            // restore original focus
            if (currentFocus && typeof currentFocus.focus === "function") {
                currentFocus.focus();
            }

            if (isInput) {
                // restore prior selection
                elem.setSelectionRange(origSelectionStart, origSelectionEnd);
            } else {
                // clear temporary content
                target.textContent = "";
            }
            return succeed;
        }

    </script>

</body>
</html>
